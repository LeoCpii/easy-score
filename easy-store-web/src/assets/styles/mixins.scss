// MEDIA SYSTEM
@mixin for-small-mobile {
    @media only screen and (max-width: 320px) {
        @content;
    }
}

@mixin for-mobile {
    @media only screen and (max-width: 480px) {
        @content;
    }
}

@mixin for-tablet {
    @media only screen and (max-width: 768px) {
        @content;
    }
}

@mixin for-large-tablet {
    @media only screen and (max-width: 1024px) {
        @content;
    }
}

@mixin for-desktop {
    @media only screen and (max-width: 1366px) {
        @content;
    }
}

@mixin for-medium-desktop {
    @media only screen and (max-width: 1680px) {
        @content;
    }
}

@mixin for-big-desktop {
    @media only screen and (max-width: 1800px) {
        @content;
    }
}

// GRID SYSTEM
@mixin grid($columns-columns: $grid-columns, $GAP: 0) {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: unquote(repeater("1fr ", $columns-columns));
    grid-gap: $GAP;
    grid-template-columns: repeat($columns-columns, 1fr);
    position: relative;
    width: 100%;
}

@mixin grid-column-start($cols) {
    -ms-grid-column: $cols;
    grid-column-start: $cols;
}

@mixin grid-column-span($cols: $grid-columns) {
    grid-column-end: span $cols;
    -ms-grid-column-span: $cols;
}

@mixin grid-row-start($rows) {
    -ms-grid-row: $rows;
    grid-row-start: $rows;
}

// ALIGN
@mixin center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin end {
    display: flex;
    justify-content: flex-end;
    align-items: center;
}

@mixin start {
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

@mixin between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

// Z-INDEX SYSTEM
@mixin z-index($type) {
    @if ($type == "hell") {
        z-index: -1 !important;
    } @else if ($type == "floor") {
        z-index: 1 !important;
    } @else if ($type == "sky") {
        z-index: 5 !important;
    } @else if ($type == "space") {
        z-index: 1000 !important;
    } @else {
        @error $type + 'is not a valid type';
    }
}
